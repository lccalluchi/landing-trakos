---
import { Icon } from 'astro-icon/components';
import desktopImg from '~/assets/images/desktop.png';
import mobileImg from '~/assets/images/mobile.png';
import SectionWrapper from '~/components/common/SectionWrapper.astro';

const {
  title = 'Gestión Operativa Inteligente',
  subtitle = 'Coordina equipos en campo, obtén reportes en tiempo real y toma decisiones basadas en datos con nuestra plataforma potenciada por IA',
  tagline = 'Inteligencia Operativa',
  id,
  isDark = false,
  classes = {},
  bg = undefined,
  mainImage = { src: desktopImg, alt: 'Dashboard Trakos' },
  mobileImage = { src: mobileImg, alt: 'Trakos en móvil' },
  showFeatureBadges = true,
  showCTA = false, // Cambiado a false
  ctaText = 'Descargar Trakos Ahora',
  ctaHref = '#download',
  secondaryCTA = {
    text: 'Escríbenos por Chat',
    href: '#contact',
  },
  features = [
    { text: 'Reportes en tiempo real', icon: 'tabler:chart-line' },
    { text: 'Gestión de equipos', icon: 'tabler:users' },
    { text: 'Análisis con IA', icon: 'tabler:brain' },
    { text: 'Multi-industria', icon: 'tabler:building-factory' },
  ],
  stats = [
    {
      number: '95',
      suffix: '%',
      title: 'de precisión en reportes',
      description: 'Datos precisos y confiables para tomar decisiones informadas',
      icon: 'tabler:chart-pie',
    },
    {
      number: '40',
      suffix: '%',
      title: 'aumento en productividad',
      description: 'Nuestros clientes reportan mejoras significativas en eficiencia operativa',
      icon: 'tabler:trending-up',
    },
    {
      number: '6',
      suffix: '+',
      title: 'industrias especializadas',
      description: 'Soluciones para construcción, minería, manufactura, comercio, logística y agroindustria',
      icon: 'tabler:building-factory-2',
    },
    {
      number: '24/7',
      suffix: '',
      title: 'soporte técnico disponible',
      description: 'Asistencia continua para garantizar el éxito de tu implementación',
      icon: 'tabler:headset',
    },
  ],
} = Astro.props;
---

<SectionWrapper
  id={id}
  class={`relative not-prose scroll-mt-[72px] ${isDark ? 'dark' : ''} ${classes?.container ?? ''}`}
>
  <!-- Fondo personalizado opcional -->
  {bg && <div class="absolute inset-0 pointer-events-none -z-[1]" aria-hidden="true" set:html={bg} />}

  <div class="relative py-12 md:py-16 lg:py-20">
    <!-- Encabezado con estilo moderno -->
    <div class="text-center max-w-3xl mx-auto mb-6">
      {
        tagline && (
          <p class="inline-block px-3 py-1 text-sm font-medium text-blue-600 dark:text-blue-400 bg-blue-100 dark:bg-blue-900/30 rounded-full mb-3">
            {tagline}
          </p>
        )
      }
      <h2
        class="text-3xl md:text-4xl font-bold tracking-tight mb-3 font-heading bg-clip-text text-transparent bg-gradient-to-r from-blue-600 to-blue-400 dark:from-blue-400 dark:to-blue-600"
      >
        {title}
      </h2>
      <p class="text-lg text-gray-600 dark:text-gray-300 max-w-2xl mx-auto">
        {subtitle}
      </p>
    </div>

    <!-- Badges de características -->
    {
      showFeatureBadges && (
        <div class="flex flex-wrap justify-center gap-2 mb-6">
          {features.map((feature) => (
            <div class="flex items-center bg-white dark:bg-slate-800 px-3 py-1.5 rounded-full shadow-sm dark:shadow-slate-700/50 text-sm font-medium text-gray-800 dark:text-gray-200 transition-transform hover:scale-105 border border-gray-200 dark:border-slate-700">
              <Icon name={feature.icon} class="w-4 h-4 mr-2 text-blue-500 dark:text-blue-400" />
              <span>{feature.text}</span>
            </div>
          ))}
        </div>
      )
    }

    <!-- Showcase principal con dispositivos -->
    <div class="relative max-w-4xl mx-auto mb-8">
      <!-- Dispositivo principal (laptop) -->
      <div
        class="relative z-10 bg-gray-800 dark:bg-gray-900 rounded-xl overflow-hidden shadow-2xl border border-gray-700 transform transition-transform hover:scale-[1.01] duration-500 ease-out"
      >
        <!-- Barra superior del navegador -->
        <div class="bg-gray-900 dark:bg-black px-4 py-2 flex items-center">
          <div class="flex space-x-2">
            <span class="h-3 w-3 rounded-full bg-red-500"></span>
            <span class="h-3 w-3 rounded-full bg-yellow-500"></span>
            <span class="h-3 w-3 rounded-full bg-green-500"></span>
          </div>
          <div
            class="mx-auto bg-gray-700 dark:bg-gray-800 rounded-full h-6 w-1/3 flex items-center justify-center text-xs text-gray-300 truncate px-3"
          >
            app.trakos.io/dashboard
          </div>
        </div>

        <!-- Contenido principal -->
        <div class="relative">
          <!-- Imagen principal -->
          <img src={mainImage.src} alt={mainImage.alt} class="w-full h-auto" />

          <!-- Superposición de elementos UI -->
          <div class="absolute top-4 right-4 bg-white dark:bg-gray-800 rounded-lg shadow-lg p-3 animate-pulse-slow">
            <div class="flex items-center space-x-2">
              <div class="h-3 w-3 bg-green-500 rounded-full"></div>
              <span class="text-xs font-medium">Agentes en línea: 5</span>
            </div>
          </div>

          <!-- Elemento de chat flotante -->
          <div
            class="absolute bottom-8 right-8 bg-white dark:bg-gray-800 rounded-xl shadow-xl p-4 max-w-xs transform transition-all duration-500 hover:scale-105 hover:shadow-2xl"
          >
            <div class="flex items-start space-x-3">
              <div
                class="flex-shrink-0 h-10 w-10 rounded-full bg-blue-100 dark:bg-blue-900 flex items-center justify-center"
              >
                <Icon name="tabler:message" class="h-5 w-5 text-blue-600 dark:text-blue-400" />
              </div>
              <div>
                <p class="text-sm font-medium">Soporte en vivo</p>
                <p class="text-xs text-gray-500 dark:text-gray-400 mt-1">¿Cómo podemos ayudarte hoy?</p>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Dispositivo móvil -->
      <div
        class="absolute -bottom-8 -right-4 md:right-0 z-20 w-48 md:w-56 bg-gray-800 dark:bg-gray-900 rounded-xl overflow-hidden shadow-xl border border-gray-700 transform transition-transform hover:scale-105 duration-500 ease-out"
      >
        <!-- Barra superior del móvil -->
        <div class="bg-gray-900 dark:bg-black px-3 py-2 flex justify-center">
          <div class="h-1.5 w-16 bg-gray-700 rounded-full"></div>
        </div>

        <!-- Contenido del móvil -->
        <img src={mobileImage.src} alt="Versión móvil" class="w-full h-auto" />

        <!-- Indicador de notificación -->
        <div
          class="absolute top-3 right-3 h-4 w-4 bg-red-500 rounded-full flex items-center justify-center text-[10px] text-white font-bold"
        >
          3
        </div>
      </div>
    </div>

    <!-- Nueva sección de estadísticas sin animaciones hover -->
    <div class="grid grid-cols-2 lg:grid-cols-4 gap-4 mb-8">
      {
        stats.map((stat, index) => {
          const colors = [
            {
              bg: 'from-blue-50 to-blue-100',
              border: 'border-blue-200',
              icon: 'from-blue-500 to-blue-600',
              text: 'text-blue-600',
              number: 'text-blue-700',
              line: 'from-blue-400 to-blue-500',
            },
            {
              bg: 'from-emerald-50 to-emerald-100',
              border: 'border-emerald-200',
              icon: 'from-emerald-500 to-emerald-600',
              text: 'text-emerald-600',
              number: 'text-emerald-700',
              line: 'from-emerald-400 to-emerald-500',
            },
            {
              bg: 'from-purple-50 to-purple-100',
              border: 'border-purple-200',
              icon: 'from-purple-500 to-purple-600',
              text: 'text-purple-600',
              number: 'text-purple-700',
              line: 'from-purple-400 to-purple-500',
            },
            {
              bg: 'from-orange-50 to-orange-100',
              border: 'border-orange-200',
              icon: 'from-orange-500 to-orange-600',
              text: 'text-orange-600',
              number: 'text-orange-700',
              line: 'from-orange-400 to-orange-500',
            },
          ];
          const colorScheme = colors[index % colors.length];

          return (
            <div
              class={`relative overflow-hidden bg-gradient-to-br ${colorScheme.bg} rounded-2xl p-4 md:p-6 ${colorScheme.border} border shadow-lg`}
            >
              {/* Icono con diseño elegante */}
              <div class="flex items-center justify-center mb-4">
                <div class="relative">
                  <div
                    class={`absolute inset-0 bg-gradient-to-br ${colorScheme.icon} rounded-2xl blur-sm opacity-20`}
                  />
                  <div
                    class={`relative w-10 h-10 md:w-12 md:h-12 bg-gradient-to-br ${colorScheme.icon} rounded-2xl flex items-center justify-center shadow-lg`}
                  >
                    <Icon name={stat.icon} class="w-5 h-5 md:w-6 md:h-6 text-white" />
                  </div>
                </div>
              </div>

              {/* Contenido con tipografía optimizada */}
              <div class="text-center">
                <div class={`text-2xl md:text-3xl font-bold ${colorScheme.number} mb-1`}>
                  {stat.number}
                  <span class="text-lg md:text-xl">{stat.suffix}</span>
                </div>
                <div class={`text-xs md:text-sm font-semibold ${colorScheme.text} mb-2`}>{stat.title}</div>
                <div class={`w-8 h-0.5 bg-gradient-to-r ${colorScheme.line} mx-auto mb-3 hidden md:block`} />
                <div class="text-xs text-gray-600 leading-relaxed hidden md:block">{stat.description}</div>
              </div>
            </div>
          );
        })
      }
    </div>

    <!-- Eliminamos la sección de CTA Buttons para evitar redundancia -->
    {
      showCTA && (
        <div class="flex flex-col sm:flex-row justify-center gap-3">
          <a
            href={ctaHref}
            class="inline-flex items-center justify-center px-5 py-2.5 rounded-lg bg-blue-600 hover:bg-blue-700 text-white font-medium transition-colors duration-300 shadow-lg hover:shadow-xl transform hover:-translate-y-0.5"
          >
            {ctaText}
            <Icon name="tabler:arrow-right" class="ml-2 h-4 w-4" />
          </a>

          {secondaryCTA && (
            <a
              href={secondaryCTA.href}
              class="inline-flex items-center justify-center px-5 py-2.5 rounded-lg bg-white dark:bg-gray-800 hover:bg-gray-100 dark:hover:bg-gray-700 text-gray-800 dark:text-white font-medium border border-gray-300 dark:border-gray-700 transition-colors duration-300"
            >
              {secondaryCTA.text}
            </a>
          )}
        </div>
      )
    }
  </div>
</SectionWrapper>

<style>
  /* Animaciones avanzadas */
  @keyframes blob {
    0%,
    100% {
      transform: translate(0, 0) scale(1);
    }
    25% {
      transform: translate(20px, -30px) scale(1.1);
    }
    50% {
      transform: translate(-20px, 20px) scale(0.9);
    }
    75% {
      transform: translate(20px, 30px) scale(1.05);
    }
  }

  @keyframes pulse-slow {
    0%,
    100% {
      opacity: 1;
    }
    50% {
      opacity: 0.8;
    }
  }

  .animate-blob {
    animation: blob 7s infinite;
  }

  .animate-pulse-slow {
    animation: pulse-slow 3s infinite;
  }

  .animation-delay-2000 {
    animation-delay: 2s;
  }

  .animation-delay-4000 {
    animation-delay: 4s;
  }
</style>
