---
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import Headline from '~/components/ui/Headline.astro';
import { Icon } from 'astro-icon/components';

const {
  title = 'Un Mensaje de Nuestro CEO',
  subtitle = 'Descubre por qué creamos Trakos y cómo está transformando la gestión operativa diaria',
  tagline = 'Liderazgo',
  id,
  isDark = false,
  classes = {},
  bg = undefined,
} = Astro.props;

const testimonials = [
  {
    content: "En el dinámico mundo de las operaciones, no hay espacio para la intuición. En proyectos donde cada decisión es crítica, lo que no se mide, simplemente no puede mejorarse.",
    author: "Wilfredo Pari",
    position: "CEO, MBA",
    image: "https://randomuser.me/api/portraits/men/32.jpg",
    rating: 5
  },
  {
    content: "Trakos nació de una profunda comprensión de esta necesidad: cerrar el vacío de información que frena la productividad. Nuestra promesa es simple: entregarte reportes precisos y oportunos que reflejen la realidad de tus operaciones.",
    author: "Wilfredo Pari",
    position: "CEO, MBA",
    image: "https://randomuser.me/api/portraits/men/32.jpg",
    rating: 5
  },
  {
    content: "Porque estamos convencidos de que solo con datos auténticos y en tiempo real se pueden tomar decisiones que verdaderamente generen valor y aseguren el éxito.",
    author: "Wilfredo Pari",
    position: "CEO, MBA",
    image: "https://randomuser.me/api/portraits/men/32.jpg",
    rating: 5
  }
];
---

<WidgetWrapper id={id} isDark={isDark} containerClass={`max-w-7xl mx-auto ${classes?.container ?? ''}`} bg={bg}>
  <Headline
    title={title}
    subtitle={subtitle}
    tagline={tagline}
    classes={{
      container: 'max-w-xl sm:mx-auto lg:max-w-2xl mb-12',
      title: 'text-4xl md:text-5xl font-bold tracking-tighter mb-4 font-heading text-primary dark:text-primary',
      subtitle: 'max-w-3xl mx-auto sm:text-center text-xl text-secondary dark:text-accent',
    }}
  />
  
  <div class="relative">
    <!-- Elementos decorativos -->
    <div class="absolute -left-16 -top-16 z-0 h-64 w-64 rounded-full bg-primary/10 blur-3xl"></div>
    <div class="absolute -bottom-16 -right-16 z-0 h-64 w-64 rounded-full bg-secondary/10 blur-3xl"></div>
    
    <!-- Testimonios -->
    <div class="testimonial-grid grid gap-6 sm:grid-cols-2 lg:grid-cols-2">
      {testimonials.map((testimonial, index) => (
        <div class="testimonial-card relative z-10 overflow-hidden rounded-xl bg-white p-6 shadow-lg transition-all duration-300 hover:-translate-y-1 hover:shadow-xl dark:bg-gray-800 dark:shadow-gray-700/30">
          <div class="mb-4 flex">
            {Array.from({ length: testimonial.rating }).map((_, i) => (
              <Icon name="tabler:star-filled" class="h-5 w-5 text-yellow-500" />
            ))}
          </div>
          
          <div class="relative mb-6">
            <Icon name="tabler:quote" class="absolute -left-2 -top-2 h-8 w-8 text-primary/20" />
            <p class="relative z-10 text-lg italic text-gray-700 dark:text-gray-300">"{testimonial.content}"</p>
          </div>
          
          <div class="flex items-center">
            <div class="mr-4 h-12 w-12 overflow-hidden rounded-full border-2 border-primary">
              <img 
                src={testimonial.image} 
                alt={testimonial.author}
                class="h-full w-full object-cover"
                onerror="this.src='https://via.placeholder.com/150/E6F4FF/0076FF?text=T';this.onerror='';"
              />
            </div>
            <div>
              <h4 class="font-bold text-primary dark:text-primary">{testimonial.author}</h4>
              <p class="text-sm text-gray-600 dark:text-gray-400">{testimonial.position}</p>
            </div>
          </div>
          
          <div class="testimonial-bg absolute -right-8 -top-8 h-32 w-32 rounded-full bg-accent opacity-10"></div>
        </div>
      ))}
    </div>
  </div>
</WidgetWrapper>

<style>
  .testimonial-card:hover .testimonial-bg {
    animation: pulse-slow 3s infinite;
  }
  
  @keyframes pulse-slow {
    0% {
      transform: scale(1);
      opacity: 0.1;
    }
    50% {
      transform: scale(1.3);
      opacity: 0.15;
    }
    100% {
      transform: scale(1);
      opacity: 0.1;
    }
  }
  
  .testimonial-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 2rem;
  }
</style>
